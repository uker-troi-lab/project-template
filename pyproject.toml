[project]
name = "prpoject_template"
version = "0.0.1"
description = "troi-lab project template."
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
]
exclude = [
  "**/doc",
  "**/tests", "**/dist",
  "**/templates", "**/_templates",
  "**/images",  "**/_images",
  "**/data",  "**/_data"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[dependency-groups]
dev = [
    "coverage>=7.10.4",
    "ruff>=0.13.0",
    "commitizen>=4.9.1",
    "pre-commit>=4.3.0",
]

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

[tool.uv]
package = false

# if required, specify development sources (sitting in relative paths) with this block
#[tool.uv.sources]
#tirutils = { path = "../tirutils/tirutils" }
#tirutils_plus = { path = "../tirutils/tirutils_plus" }

[tool.ruff]
respect-gitignore = false
target-version = "py311"
extend-exclude = [".uv-cache"]

[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "D",   # pydocstyle
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.commitizen]
name = "cz_customize"

[tool.commitizen.customize]
schema = "<type>: <body>"
schema_pattern = "(feat|fix|refactor|perf|docs|test|ci|build|style|chore)!?:(\\s.*)"
change_type_order = ["feat", "fix", "refactor", "perf", "docs", "test", "ci", "build", "style", "chore"]
commit_parser = "^((?P<change_type>feat|fix|refactor|perf|chore|test|ci|build|docs|style)(?:\\((?P<scope>[^()\\r\n]*)\\)|\\()?(?P<breaking>!)?|\\w+!):\\s(?P<message>.*)?"
changelog_pattern = "^((BREAKING[\\-\\ ]CHANGE|\\w+)(\\(.+\\))?!?):"
change_type_map = {"feat" = "New Features", "fix" = "Bug Fixes", "refactor" = "Refactor", "perf" = "Performance", "chore" = "Other changes", "test" = "Unit tests", "ci" = "CI", "build" = "Build", "docs" = "Documentation", "style" = "Style"}
